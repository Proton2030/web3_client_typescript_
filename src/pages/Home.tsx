import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.css";
import { useCallback, useEffect, useState } from "react";
import { Login } from "@/components/login/Login";
import { useWeb3Modal } from "@web3modal/wagmi/react";
import { useAccount, useDisconnect } from "wagmi";
import { ConnectBtn } from "@/components/sub/button/ConnectBtn";
import { Loader } from "@/components/Loader/Loader";
import axios from "axios";
import img from "../../public/landingimg.png"
export default function CloudBoost() {
  const [isNetworkSwitchHighlighted, setIsNetworkSwitchHighlighted] =
    useState(false);
  const [isConnectHighlighted, setIsConnectHighlighted] = useState(false);
  const [referred, setReferred] = useState(""); // New state to hold referredBy value

  const { open, close } = useWeb3Modal();
  const { address } = useAccount();
  const { disconnect } = useDisconnect();

  const handleConnect = useCallback(async () => {
    try {
      const user = {
        user_id: address,
        referralCode: Math.random().toString(36).substring(2, 8),
        referredBy: referred,
      };

      const response = await axios.post('https://web-3-be.onrender.com/api/v1/auth/registration', user, {
        headers: {
          'Content-Type': 'application/json',
        },
      });

      // console.log(response.data);
    } catch (error) {
      console.error('Registration failed', error);
      console.log('Full error object:', error);
    }
  }, [address, referred]);


  useEffect(() => {
    if (address) {
      console.log("------>account", address);
      handleConnect();
    }
  }, [address, handleConnect]);

  const closeAll = () => {
    setIsNetworkSwitchHighlighted(false);
    setIsConnectHighlighted(false);
  };

  return (
    <>
      <Head>
        <title>Login with wallet</title>
        <meta
          name="description"
          content="Generated by create-wc-dapp"
        />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>




      <main className={styles.main}>
        {
          (address) ?
            <>
              <div className="text-3xl font-semibold text-white">Cloud Boost</div>
              <div className={styles.wrapper}>
                <div className="w-full md:max-w-4xl mx-auto -mt-20 md:w-[30rem] relative overflow-hidden z-10
           bg-gray-800 p-8 rounded-lg shadow-md 
           before:w-24 before:h-24 before:absolute before:bg-purple-600 before:rounded-full 
           before:-z-10 before:blur-2xl after:w-32 after:h-32 after:absolute after:bg-sky-400
            after:rounded-full after:-z-10 after:blur-xl after:top-24 after:-right-12">
                  <Loader />
                </div>
                </div>
            </>
            :
          <>
            <div className="w-full h-[100vh]">
    
    <section className="py-12 h-full pt-56  sm:pb-16 lg:pb-20 xl:pb-24">
        <div className="px-4 mx-auto sm:px-6 lg:px-8 max-w-7xl">
            <div className="grid items-center max-w-5xl grid-cols-1 mx-auto gap-y-8 lg:grid-cols-5 gap-x-16">
                <div className="max-w-md mx-auto text-center lg:max-w-none lg:col-span-3">
                    <div className="text-4xl font-normal text-white  sm:text-5xl lg:text-4xl xl:text-6xl">BTCin  <span className="text-transparent bg-clip-text uppercase bg-gradient-to-r from-cyan-500 to-purple-500">Stakings</span></div>
                    <p className="mt-6 text-lg font-normal text-white sm:text-xl">A community centric #decentralized staking & referral reward distribution system.</p>
                    <div className="mt-8 sm:mt-10 gap-5">
                    <div className="mb-5">Enter Referrer Address</div>
                    <div className="groupinput mx-auto mb-5 w-60">
                    <svg className="icon" data-slot="icon" fill="none" stroke-width="1.5" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
  <path stroke-linecap="round" stroke-linejoin="round" d="M13.19 8.688a4.5 4.5 0 0 1 1.242 7.244l-4.5 4.5a4.5 4.5 0 0 1-6.364-6.364l1.757-1.757m13.35-.622 1.757-1.757a4.5 4.5 0 0 0-6.364-6.364l-4.5 4.5a4.5 4.5 0 0 0 1.242 7.244"></path>
</svg>
    <input  value={referred} onChange={(e) => setReferred(e.target.value)}
                   placeholder="Referred by (optional)"
                    type="text" className="input rounded-full"/>
</div>

                        <a onClick={() => open()} title="" className="inline-flex text-lg items-center justify-center px-8 py-4 font-normal text-white transition-all duration-200 rounded-full bg-gradient-to-r from-cyan-500 to-purple-500 hover:contrast-150" role="button"> 
                        Connect wallet to Login </a>
                    </div>
                </div>

                <div className="lg:col-span-2 lg:order-first">
                    <img className="w-20 lg:w-[50rem] mx-auto" src={"https://www.btcin.in/tokenLogoSmall.svg"} alt="" />
                </div>
            </div>
        </div>
    </section>
</div>
          </>
        }

        {/* 
        n
    <DePayButtons.DePayButton
      integration={ props.integration }
      payload={ props.payload }
      blockchains={ props.blockchains }
    /> */}
      </main>
    </>
  );
}
