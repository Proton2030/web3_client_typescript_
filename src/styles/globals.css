@import url("https://fonts.googleapis.com/css2?family=Avenir+Next:wght@400;500;600;700&family=Fira+Code:wght@400;700&family=Fira+Mono:wght@400;700&family=Manrope:wght@400;700&family=Roboto+Mono:wght@400;700&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --font-base: "Avenir Next", "Manrope", sans-serif;
  --font-mono: "Fira Code", "Fira Mono", "Roboto Mono", monospace;
  --h: 180;
  --s: 2%;
  --l: 20%;
  --color-bg: hsl(0, 0%, 4%);
  --color-grey-100: #fff;
  --color-grey-300: #e4e7e7;
  --color-grey-400: #c9cfcf;
  --color-grey-500: #9ea9a9;
  --color-grey-700: #7a8484;
  --color-grey-900: #3b4040;
  --color-grey-950: #272a2a;
  --color-primary: hsl(var(--h), var(--s), var(--l));
  --shadow-md: rgba(0, 0, 0, 0.1) 0px 20px 25px -5px,
    rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;
  --shadow-lg: rgba(0, 0, 0, 0.25) 0px 25px 50px -12px;
  --rounded-sm: 0.5rem;
  --rounded-md: 1.5rem;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  height: 100%;
}

html,
body,
#__next {
  min-height: 100% !important;
  height: 100%;
}

body {
  min-height: 100%;
  font-family: var(--font-base);
  background-color: var(--color-bg);
  color: var(--color-grey-100);
  background-image: url("/pattern.png");
}
/* Hide scrollbar for Chrome, Safari and Opera */
body::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
body {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

pre,
code {
  font-family: var(--font-mono);
}

code {
  background-color: var(--color-grey-950);
  padding: 0.25rem 0.5rem;
  margin: 0 0.25rem;
  border-radius: 0.4rem;
  font-size: 0.875rem;
}

code:before,
code:after {
  content: "`";
}

ul,
li {
  list-style-position: inside;
}

header {
  position: fixed;
  width: 100%;
}

.pyramid-loader {
  position: relative;
  width: 300px;
  height: 150px;
  display: block;
  transform-style: preserve-3d;
  transform: rotateX(-20deg);
}

.wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  animation: spin 4s linear infinite;
}

@keyframes spin {
  100% {
    transform: rotateY(360deg);
  }
}

.pyramid-loader .wrapper .side {
  width: 70px;
  height: 70px;
  /* you can choose any gradient or color you want */
  /* background: radial-gradient( #2F2585 10%, #F028FD 70%, #2BDEAC 120%); */
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  transform-origin: center top;
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
}

.pyramid-loader .wrapper .side1 {
  transform: rotateZ(-30deg) rotateY(90deg);
  background: conic-gradient(#2bdeac, #f028fd, #d8cce6, #2f2585);
}

.pyramid-loader .wrapper .side2 {
  transform: rotateZ(30deg) rotateY(90deg);
  background: conic-gradient(#2f2585, #d8cce6, #f028fd, #2bdeac);
}

.pyramid-loader .wrapper .side3 {
  transform: rotateX(30deg);
  background: conic-gradient(#2f2585, #d8cce6, #f028fd, #2bdeac);
}

.pyramid-loader .wrapper .side4 {
  transform: rotateX(-30deg);
  background: conic-gradient(#2bdeac, #f028fd, #d8cce6, #2f2585);
}

.pyramid-loader .wrapper .shadow {
  width: 60px;
  height: 60px;
  background: #8b5ad5;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  transform: rotateX(90deg) translateZ(-40px);
  filter: blur(12px);
}
.card {
  width: 195px;
  height: 205px;
  background: #313131;
  border-radius: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  transition: 0.2s ease-in-out;
}

.img {
  height: 30%;
  position: absolute;
  transition: 0.2s ease-in-out;
  z-index: 1;
}

.textBox {
  opacity: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 15px;
  transition: 0.2s ease-in-out;
  z-index: 2;
}

.textBox > .text {
  font-weight: bold;
}

.textBox > .head {
  font-size: 20px;
}

.textBox > .price {
  font-size: 17px;
}

.textBox > span {
  font-size: 12px;
  color: lightgrey;
}

.card:hover > .textBox {
  opacity: 1;
}

.card:hover > .img {
  height: 65%;
  filter: blur(12px);
  animation: anim 3s infinite;
}

@keyframes anim {
  0% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(-20px);
  }

  100% {
    transform: translateY(0);
  }
}

.card:hover {
  transform: scale(1.04) rotate(-1deg);
}

.toggle-label {
  width: 100px;
  height: 50px;
  cursor: pointer;
  display: inline-block;
  padding: 5px;
  background: #272727;
  border-radius: 50px;
  box-shadow: 0px 0px 16px -8px #fefefe;
  user-select: none;
}

.toggle-label::before,
.toggle-label::after {
  content: "start";
  overflow: hidden;
  font-size: 100px;
  text-transform: uppercase;
  position: absolute;
  left: 50%;
  top: 40%;
  transition: 200ms;
  transform: translate(-50%, -50%);
  z-index: -1;
  font-family: sans-serif;
  font-weight: 300;
  color: transparent;
  -webkit-text-stroke-color: #272727;
  -webkit-text-stroke-width: 1px;
  transition: 700ms;
}

.toggle-label::after {
  content: "play";
  transform: translate(0, -50%);
  trnasition: 700ms;
  left: -100%;
  transform: translate(0, -50%);
}

.toggle-label .circle {
  appearance: none;
  position: relative;
  width: 40px;
  height: 40px;
  background: #5e5e5e;
  border-radius: 50%;
  transition: all 0.5s cubic-bezier(1, 0, 0, 1);
  left: 0;
}

.toggle-label .circle:checked {
  background: #f43f5e;
  left: calc(100% - 40px);
}

.toggle-label .circle::before,
.toggle-label .circle::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: inline-block;
  width: 0;
  height: 0;
  border: 10px solid transparent;
  margin-left: 10px;
  border-left-color: #fefefe;
  z-index: 3;
  transition: 200ms;
}

.toggle-label:has(.circle:checked)::before {
  left: 100%;
  transform: translate(0, -50%);
}
.toggle-label:has(.circle:checked)::after {
  left: 50%;
  transform: translate(-50%, -50%);
}
.toggle-label .circle::after {
  border: none;
  margin-left: -5px;
  height: 18px;
  width: 3px;
  background-color: #fefefe;
  transition-delay: 150ms;
}

.toggle-label .circle::before {
  transition-delay: 50ms;
}

.toggle-label .circle:checked::before {
  opacity: 0;
}

.toggle-label .circle:checked::after {
  width: 20px;
  height: 20px;
  margin-left: 0px;
  border-radius: 5px;
}
.Btn {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  width: 45px;
  height: 45px;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition-duration: 0.3s;
}

/* plus sign */
.sign {
  width: 100%;
  transition-duration: 0.3s;
  display: flex;
  align-items: center;
  justify-content: center;
}

.sign svg {
  width: 17px;
}

.sign svg path {
  fill: white;
}
/* text */
.text {
  position: absolute;
  right: 0%;
  width: 0%;
  opacity: 0;
  color: white;
  font-size: 1.2em;
  font-weight: 600;
  transition-duration: 0.3s;
}
/* hover effect on button width */
.Btn:hover {
  width: 125px;
  border-radius: 40px;
  transition-duration: 0.3s;
}

.Btn:hover .sign {
  width: 30%;
  transition-duration: 0.3s;
  padding-left: 20px;
}
/* hover effect button's text */
.Btn:hover .text {
  opacity: 1;
  width: 70%;
  transition-duration: 0.3s;
  padding-right: 10px;
}
/* button click effect*/
.Btn:active {
  transform: translate(2px, 2px);
}

.groupinput {
  display: flex;
  line-height: 28px;
  align-items: center;
  position: relative;
}

.input {
  height: 40px;
  line-height: 28px;
  padding: 0 1rem;
  width: 100%;
  padding-left: 2.5rem;
  border: 2px solid transparent;
  outline: none;
  background-color: #d9e8d8;
  color: #0d0c22;
  box-shadow: 0 0 5px #c1d9bf, 0 0 0 10px #f5f5f5eb;
  transition: 0.3s ease;
}

.input::placeholder {
  color: #777;
}

.icon {
  position: absolute;
  left: 1rem;
  color: #0d0c22;
  width: 1rem;
  height: 1rem;
}

/* This is an example, feel free to delete this code */
.tooltip-container {
  position: relative;
  background-color: #ff3cac;
  background-image: linear-gradient(
    225deg,
    #ff3cac 0%,
    #784ba0 50%,
    #2b86c5 100%
  );
  cursor: pointer;
  transition: all 0.2s;
  font-size: 17px;
  /*padding: 0.7em 1.8em;*/
  width: 50px;
  height: 50px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  fill: #fff;
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.18);
}
.tooltip-container .borde-back {
  width: 60px;
  height: 60px;
  background-color: #e8e8e8;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  box-shadow: none;
}

.tooltip-container .iconavatar {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10;
  background-color: #ff3cac;
  background-image: linear-gradient(
    225deg,
    #ff3cac 0%,
    #784ba0 50%,
    #2b86c5 100%
  );
  cursor: pointer;
}

.tooltip {
  position: absolute;
  top: -2;
  left: -45px; /* Altere a posição inicial para a esquerda, fora da tela */
  transform: translateX(
    -32%
  ); /* Usando translateX para controlar a transição da esquerda para a direita */
  width: 160px;
  height: 52px;
  opacity: 0;
  pointer-events: none;
  transition: all 0.6s;
  border-radius: 50px;
  background-color: #ff3cac;
  background-image: linear-gradient(
    225deg,
    #ff3cac 0%,
    #784ba0 50%,
    #2b86c5 100%
  );
  display: flex;
  align-items: center;
  justify-content: right;
  padding-right: 16px;
  color: #fff;
  font-size: 18px;
  font-family: sans-serif;
  font-weight: 800px;
}

.tooltip::before {
  position: absolute;
  content: "";
  height: 0.6em;
  width: 0.6em;
  right: -0.2em; /* Mude para a direita */
  top: 50%; /* Altere o topo para o meio da tooltip */
  transform: translateY(-50%) rotate(45deg); /* Use translateY para centralizar verticalmente */
  background: var(--background);
}

.tooltip-container:hover .tooltip {
  left: 100%; /* Altere para a posição desejada (a direita) */
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
  z-index: -10;
}
.tooltip-container:hover {
  transform: translateX(-50px);
  transition: 0.5s linear;
}

.svg {
  width: 3.25em;
  transform-origin: center;
  animation: rotate4 2s linear infinite;
}

circle {
  fill: none;
  stroke: hsl(214, 97%, 59%);
  stroke-width: 2;
  stroke-dasharray: 1, 200;
  stroke-dashoffset: 0;
  stroke-linecap: round;
  animation: dash4 1.5s ease-in-out infinite;
}

@keyframes rotate4 {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes dash4 {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 90, 200;
    stroke-dashoffset: -35px;
  }

  100% {
    stroke-dashoffset: -125px;
  }
}

@keyframes clockwise {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes counter-clockwise {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(-360deg);
  }
}

.gearbox {
  background: #111;
  display: flex;
  justify-content: center;
  align-items: center;
  border: none;
  overflow: hidden;
  border-radius: 6px;
  box-shadow: 0px 0px 0px 1px rgba(255, 255, 255, 0.1);
  margin-top: "40%";
}

.gearbox .overlay {
  border-radius: 6px;
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
  box-shadow: inset 0px 0px 20px black;
  transition: background 0.2s;
}

.gearbox .overlay {
  background: transparent;
}

.gear {
  position: absolute;
  height: 60px;
  width: 60px;
  box-shadow: 0px -1px 0px 0px #888888, 0px 1px 0px 0px black;
  border-radius: 30px;
}

.gear.large {
  height: 120px;
  width: 120px;
  border-radius: 60px;
}

.gear.large:after {
  height: 96px;
  width: 96px;
  border-radius: 48px;
  margin-left: -48px;
  margin-top: -48px;
}

.gear.one {
  top: 12px;
  left: 10px;
}

.gear.two {
  top: 61px;
  left: 60px;
}

.gear.three {
  top: 110px;
  left: 10px;
}

.gear.four {
  top: 13px;
  left: 128px;
}

.gear:after {
  content: "";
  position: absolute;
  height: 36px;
  width: 36px;
  border-radius: 36px;
  background: #111;
  top: 50%;
  left: 50%;
  margin-left: -18px;
  margin-top: -18px;
  z-index: 3;
  box-shadow: 0px 0px 10px rgba(255, 255, 255, 0.1),
    inset 0px 0px 10px rgba(0, 0, 0, 0.1), inset 0px 2px 0px 0px #090909,
    inset 0px -1px 0px 0px #888888;
}

.gear-inner {
  position: relative;
  height: 100%;
  width: 100%;
  background: #555;
  border-radius: 30px;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.large .gear-inner {
  border-radius: 60px;
}

.gear.one .gear-inner {
  animation: counter-clockwise 3s infinite linear;
}

.gear.two .gear-inner {
  animation: clockwise 3s infinite linear;
}

.gear.three .gear-inner {
  animation: counter-clockwise 3s infinite linear;
}

.gear.four .gear-inner {
  animation: counter-clockwise 6s infinite linear;
}

.gear-inner .bar {
  background: #555;
  height: 16px;
  width: 76px;
  position: absolute;
  left: 50%;
  margin-left: -38px;
  top: 50%;
  margin-top: -8px;
  border-radius: 2px;
  border-left: 1px solid rgba(255, 255, 255, 0.1);
  border-right: 1px solid rgba(255, 255, 255, 0.1);
}

.large .gear-inner .bar {
  margin-left: -68px;
  width: 136px;
}

.gear-inner .bar:nth-child(2) {
  transform: rotate(60deg);
}

.gear-inner .bar:nth-child(3) {
  transform: rotate(120deg);
}

.gear-inner .bar:nth-child(4) {
  transform: rotate(90deg);
}

.gear-inner .bar:nth-child(5) {
  transform: rotate(30deg);
}

.gear-inner .bar:nth-child(6) {
  transform: rotate(150deg);
}

.glitch {
  position: relative;
  font-size: 40px;
  font-weight: bold;
  color: #ffffff;
  letter-spacing: 3px;
  z-index: 1;
}

.glitch:before,
.glitch:after {
  display: block;
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0.8;
}

.glitch:before {
  animation: glitch-it 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both infinite;
  color: #00ffff;
  z-index: -1;
}

.glitch:after {
  animation: glitch-it 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both
    infinite;
  color: #ff00ff;
  z-index: -2;
}

@keyframes glitch-it {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  to {
    transform: translate(0);
  }
}
